services:
  postgres:
    image: postgres:14
    container_name: cloudsync-postgres
    environment:
      POSTGRES_USER: cloudsync
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: cloudsync
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cloudsync"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: cloudsync-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: cloudsync-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: cloudsync
      RABBITMQ_DEFAULT_PASS: rabbitmq_password
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    container_name: cloudsync-api
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://cloudsync:postgres_password@postgres:5432/cloudsync
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://cloudsync:rabbitmq_password@rabbitmq:5672
      NODE_ENV: development
      JWT_SECRET: dev_jwt_secret_key
    ports:
      - "3000:3000"
    volumes:
      - ./api:/app
      - api_node_modules:/app/node_modules
      - api_dist:/app/dist
    restart: unless-stopped

  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile.dev
    container_name: cloudsync-dashboard
    depends_on:
      - api
    environment:
      API_URL: http://api:3000
      NODE_ENV: development
      HOST: "0.0.0.0"
      # Enable file watching for development
      CHOKIDAR_USEPOLLING: "true"
      # Force refresh on file changes
      FAST_REFRESH: "true"
      # Explicitly set development mode
      VITE_USER_NODE_ENV: "development"
    ports:
      # Map container port 5173 to host port 3001
      - "3001:5173"
    volumes:
      # Mount the dashboard directory with consistent naming
      - ./dashboard:/app:consistent
      # Use named volumes for node_modules and build to improve performance
      - dashboard_node_modules:/app/node_modules
      - dashboard_build:/app/build
    # Ensure container restarts if it crashes
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
  api_node_modules:
  api_dist:
  dashboard_node_modules:
  dashboard_build:
